     1                                  section .bss
     2 00000000 <res 00000001>            Buff resb 1
     3                                  
     4                                  section .data
     5                                  
     6                                  section .text
     7                                    global _start
     8                                  
     9                                  _start:
    10 00000000 90                        nop ; Keep gdb happy
    11                                  
    12                                  Read:
    13 00000001 B803000000                mov eax, 3 ; Use sys_read
    14 00000006 BB00000000                mov ebx, 0 ; Read from stdin
    15 0000000B B9[00000000]              mov ecx, Buff ; Use the address of the buffer
    16 00000010 BA01000000                mov edx, 1 ; Read one character from stdin
    17 00000015 CD80                      int 80h
    18                                  
    19 00000017 83F800                    cmp eax, 0 ; Check the return value
    20 0000001A 742C                      je Exit ; Exit is we're at the end of the file
    21                                  
    22 0000001C 803D[00000000]61          cmp byte [Buff], 61h ; Check if the character is below lowercase 'a'
    23 00000023 7210                      jb Write
    24 00000025 803D[00000000]7A          cmp byte [Buff], 7Ah ; Check if the character is above lowercase 'z'
    25 0000002C 7707                      ja Write
    26                                  
    27 0000002E 802D[00000000]20          sub byte [Buff], 20h ; At this point, the character is lowercase
    28                                  
    29                                  Write:
    30 00000035 B804000000                mov eax, 4 ; Use sys_write
    31 0000003A BB01000000                mov ebx, 1 ; Write to stdout
    32 0000003F B9[00000000]              mov ecx, Buff
    33 00000044 CD80                      int 80h
    34 00000046 EBB9                      jmp Read
    35                                  
    36                                  Exit:
    37 00000048 B801000000                mov eax, 1
    38 0000004D BB00000000                mov ebx, 0
    39 00000052 CD80                      int 80h
