#!/usr/bin/env runhaskell
import Control.Monad (unless)
import qualified System.Process as S
import qualified System.Exit as S

sh :: String -> IO ()
sh cmd = do
  x <- S.system cmd
  case x of
       S.ExitFailure _ -> error $ "[ERROR]" ++ cmd ++ " failed."
       _ -> return ()

cabalSandboxInit :: IO ()
cabalSandboxInit = do
  x <- S.system "cabal sandbox init"
  case x of
       S.ExitFailure _ -> error $ "[ERROR] initializing sandbox. Please ensure GHC version >= 7.8 and cabal >= 1.18 are installed and try again."
       _ -> return ()

main :: IO ()
main = do
  cabalSandboxInit
  sh "cabal install --only-dependencies"
  sh "cabal configure --enable-test"
  sh "cabal install --reinstall"
